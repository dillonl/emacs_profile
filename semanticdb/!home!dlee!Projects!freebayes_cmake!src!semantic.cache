;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables (list 
   (semanticdb-table "Makefile"
    :major-mode 'makefile-gmake-mode
    :tags 
        '( ("CC" variable (:default-value ("g++")) nil [239 246])
            ("C" variable (:default-value ("gcc")) nil [246 252])
            ("CFLAGS" variable (:default-value ("-O3" "-D_FILE_OFFSET_BITS=64")) nil [270 304])
            ("BAMTOOLS_ROOT" variable (:default-value ("../bamtools")) nil [384 410])
            ("VCFLIB_ROOT" variable (:default-value ("../vcflib")) nil [410 432])
            ("LIBS" variable (:default-value ("-L./" "-L$(VCFLIB_ROOT)/tabixpp/" "-L$(BAMTOOLS_ROOT)/lib" "-ltabix" "-lz" "-lm")) nil [433 510])
            ("INCLUDE" variable (:default-value ("-I$(BAMTOOLS_ROOT)/src" "-I../ttmath" "-I$(VCFLIB_ROOT)/src" "-I$(VCFLIB_ROOT)/")) nil [510 594])
            ("all" function (:arguments ("autoversion" "../bin/freebayes" "../bin/bamleftalign")) nil [595 649])
            ("static" function nil nil [650 698])
            ("debug" function nil nil [699 768])
            ("profiling" function nil nil [769 815])
            ("gprof" function nil nil [816 859])
            (".PHONY" function (:arguments ("all" "static" "debug" "profiling" "gprof")) nil [860 901])
            ("$(BAMTOOLS_ROOT)" function nil nil [953 1063])
            ("OBJECTS" variable (:default-value ("BedReader.o" "CNV.o" "fastlz.o" "Fasta.o" "Parameters.o" "Allele.o" "Sample.o" "Result.o" "AlleleParser.o" "Utility.o" "Genotype.o" "DataLikelihood.o" "Multinomial.o" "Ewens.o" "ResultData.o" "Dirichlet.o" "Marginals.o" "split.o" "LeftAlign.o" "IndelAllele.o" "Bias.o" "Contamination.o" "SegfaultHandler.o" "../vcflib/tabixpp/tabix.o" "../vcflib/tabixpp/bgzf.o" "../vcflib/smithwaterman/SmithWatermanGotoh.o" "../vcflib/smithwaterman/disorder.c" "../vcflib/smithwaterman/LeftAlign.o" "../vcflib/smithwaterman/Repeats.o" "../vcflib/smithwaterman/IndelAllele.o" "Variant.o" "$(BAMTOOLS_ROOT)/lib/libbamtools.a")) nil [1065 1743])
            ("HEADERS" variable (:default-value ("multichoose.h" "version_git.h")) nil [1744 1780])
            ("freebayes" function (:arguments ("freebayes.o" "$(OBJECTS)" "$(HEADERS)")) nil [1796 1937])
            ("../bin/freebayes" function (:arguments ("freebayes.o" "$(OBJECTS)" "$(HEADERS)")) nil [1796 1937])
            ("alleles" function (:arguments ("alleles.o" "$(OBJECTS)" "$(HEADERS)")) nil [1938 2069])
            ("../bin/alleles" function (:arguments ("alleles.o" "$(OBJECTS)" "$(HEADERS)")) nil [1938 2069])
            ("dummy" function (:arguments ("dummy.o" "$(OBJECTS)" "$(HEADERS)")) nil [2070 2191])
            ("../bin/dummy" function (:arguments ("dummy.o" "$(OBJECTS)" "$(HEADERS)")) nil [2070 2191])
            ("bamleftalign" function (:arguments ("$(BAMTOOLS_ROOT)/lib/libbamtools.a" "bamleftalign.o" "Fasta.o" "LeftAlign.o" "IndelAllele.o" "split.o")) nil [2192 2469])
            ("../bin/bamleftalign" function (:arguments ("$(BAMTOOLS_ROOT)/lib/libbamtools.a" "bamleftalign.o" "Fasta.o" "LeftAlign.o" "IndelAllele.o" "split.o")) nil [2192 2469])
            ("bamfiltertech" function (:arguments ("$(BAMTOOLS_ROOT)/lib/libbamtools.a" "bamfiltertech.o" "$(OBJECTS)" "$(HEADERS)")) nil [2470 2666])
            ("../bin/bamfiltertech" function (:arguments ("$(BAMTOOLS_ROOT)/lib/libbamtools.a" "bamfiltertech.o" "$(OBJECTS)" "$(HEADERS)")) nil [2470 2666])
            ("Fasta.o" function (:arguments ("Fasta.cpp")) nil [2679 2739])
            ("alleles.o" function (:arguments ("alleles.cpp" "AlleleParser.o" "Allele.o")) nil [2740 2830])
            ("dummy.o" function (:arguments ("dummy.cpp" "AlleleParser.o" "Allele.o")) nil [2831 2915])
            ("freebayes.o" function (:arguments ("freebayes.cpp" "TryCatch.h" "$(BAMTOOLS_ROOT)/lib/libbamtools.a")) nil [2916 3034])
            ("fastlz.o" function (:arguments ("fastlz.c" "fastlz.h")) nil [3035 3103])
            ("Parameters.o" function (:arguments ("Parameters.cpp" "Parameters.h" "Version.h")) nil [3104 3202])
            ("Allele.o" function (:arguments ("Allele.cpp" "Allele.h" "multichoose.h" "Genotype.h")) nil [3203 3300])
            ("Sample.o" function (:arguments ("Sample.cpp" "Sample.h")) nil [3301 3373])
            ("Genotype.o" function (:arguments ("Genotype.cpp" "Genotype.h" "Allele.h" "multipermute.h")) nil [3374 3478])
            ("Ewens.o" function (:arguments ("Ewens.cpp" "Ewens.h")) nil [3479 3547])
            ("AlleleParser.o" function (:arguments ("AlleleParser.cpp" "AlleleParser.h" "multichoose.h" "Parameters.h" "$(BAMTOOLS_ROOT)/lib/libbamtools.a")) nil [3548 3706])
            ("Utility.o" function (:arguments ("Utility.cpp" "Utility.h" "Sum.h" "Product.h")) nil [3707 3799])
            ("SegfaultHandler.o" function (:arguments ("SegfaultHandler.cpp" "SegfaultHandler.h")) nil [3800 3908])
            ("Dirichlet.o" function (:arguments ("Dirichlet.h" "Dirichlet.cpp" "Sum.h" "Product.h")) nil [3909 4009])
            ("Multinomial.o" function (:arguments ("Multinomial.h" "Multinomial.cpp" "Sum.h" "Product.h" "Utility.h")) nil [4010 4128])
            ("DataLikelihood.o" function (:arguments ("DataLikelihood.cpp" "DataLikelihood.h" "Sum.h" "Product.h")) nil [4129 4249])
            ("Marginals.o" function (:arguments ("Marginals.cpp" "Marginals.h")) nil [4250 4334])
            ("ResultData.o" function (:arguments ("ResultData.cpp" "ResultData.h" "Result.h" "Result.cpp" "Allele.h" "Utility.h" "Genotype.h" "AlleleParser.h" "Version.h")) nil [4335 4498])
            ("Result.o" function (:arguments ("Result.cpp" "Result.h")) nil [4499 4571])
            ("BedReader.o" function (:arguments ("BedReader.cpp" "BedReader.h")) nil [4572 4656])
            ("CNV.o" function (:arguments ("CNV.cpp" "CNV.h")) nil [4657 4717])
            ("Bias.o" function (:arguments ("Bias.cpp" "Bias.h")) nil [4718 4782])
            ("split.o" function (:arguments ("split.h" "split.cpp")) nil [4783 4851])
            ("bamleftalign.o" function (:arguments ("bamleftalign.cpp" "LeftAlign.cpp")) nil [4852 4947])
            ("bamfiltertech.o" function (:arguments ("bamfiltertech.cpp")) nil [4948 5032])
            ("LeftAlign.o" function (:arguments ("LeftAlign.h" "LeftAlign.cpp" "$(BAMTOOLS_ROOT)/lib/libbamtools.a")) nil [5033 5152])
            ("IndelAllele.o" function (:arguments ("IndelAllele.cpp" "IndelAllele.h")) nil [5153 5245])
            ("Variant.o" function (:arguments ("$(VCFLIB_ROOT)/src/Variant.h" "$(VCFLIB_ROOT)/src/Variant.cpp")) nil [5246 5379])
            ("../vcflib/tabixpp/tabix.o" function (:arguments ("../vcflib/tabixpp/tabix.hpp" "../vcflib/tabixpp/tabix.cpp")) nil [5380 5463])
            ("../vcflib/tabixpp/bgzf.o" function (:arguments ("../vcflib/tabixpp/bgzf.c" "../vcflib/tabixpp/bgzf.h")) nil [5463 5572])
            ("../vcflib/smithwaterman/SmithWatermanGotoh.o" function (:arguments ("../vcflib/smithwaterman/SmithWatermanGotoh.h" "../vcflib/smithwaterman/SmithWatermanGotoh.cpp")) nil [5573 5750])
            ("VERSION_FILE" variable (:default-value ("./version_git.h")) nil [5752 5781])
            ("RELEASED_VERSION_FILE" variable (:default-value ("./version_release.txt")) nil [5781 5825])
            (".PHONY" function (:arguments ("setversion")) nil [6160 6179])
            ("setversion" function nil nil [6179 6191])
            (".PHONY" function (:arguments ("autoversion")) nil [7494 7514])
            ("autoversion" function nil nil [7514 8343])
            ("clean" function nil nil [8345 8546]))          
    :file "Makefile"
    :pointmax 8547
    :fsize 8546
    :lastmodtime '(21577 32831 403490 837000)
    :unmatched-syntax '((shell-command 6943 . 6952) (bol 6942 . 6942) (shell-command 6909 . 6941) (bol 6908 . 6908) (shell-command 6852 . 6907) (bol 6851 . 6851) (shell-command 6841 . 6850) (bol 6840 . 6840) (shell-command 6800 . 6839) (bol 6799 . 6799) (shell-command 6776 . 6798) (bol 6775 . 6775) (shell-command 6719 . 6774) (bol 6718 . 6718) (shell-command 6683 . 6717) (bol 6682 . 6682) (shell-command 6634 . 6681) (bol 6633 . 6633) (shell-command 6592 . 6632) (bol 6591 . 6591) (shell-command 6501 . 6590) (bol 6500 . 6500) (shell-command 6445 . 6499) (bol 6444 . 6444) (shell-command 6325 . 6443) (bol 6324 . 6324) (ENDIF 6318 . 6323) (bol 6314 . 6314) (shell-command 6217 . 6313) (bol 6216 . 6216) (string 6213 . 6215) (string 6200 . 6212) (IFEQ 6195 . 6199) (bol 6191 . 6191))
    )
   )
  :file "!home!dlee!Projects!freebayes_cmake!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
