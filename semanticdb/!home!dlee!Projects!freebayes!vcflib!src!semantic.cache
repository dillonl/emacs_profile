;; Object src/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "src/"
  :tables (list 
   (semanticdb-table "Variant.h"
    :major-mode 'c-mode
    :tags 
        '( ("__VARIANT_H" variable (:constant-flag t) nil [29 40])
            ("vector" include (:system-flag t) nil [42 59])
            ("list" include (:system-flag t) nil [60 75])
            ("map" include (:system-flag t) nil [76 90])
            ("string" include (:system-flag t) nil [91 108])
            ("iostream" include (:system-flag t) nil [109 128])
            ("fstream" include (:system-flag t) nil [129 147])
            ("utility" include (:system-flag t) nil [148 166])
            ("stdlib.h" include (:system-flag t) nil [167 186])
            ("assert.h" include (:system-flag t) nil [187 206])
            ("stack" include (:system-flag t) nil [207 223])
            ("queue" include (:system-flag t) nil [224 240])
            ("set" include (:system-flag t) nil [241 255])
            ("split.h" include nil nil [256 274])
            ("join.h" include nil nil [275 292])
            ("tabixpp/tabix.hpp" include nil nil [293 321])
            ("smithwaterman/SmithWatermanGotoh.h" include nil nil [322 367])
            ("smithwaterman/disorder.h" include nil nil [368 403])
            ("ssw_cpp.h" include nil nil [404 424])
            ("convert.h" include nil nil [425 445])
            ("multichoose/multichoose.h" include nil nil [446 482])
            ("filevercmp/filevercmp.h" include (:typemodifiers ("extern" "\"C\"")) (reparse-symbol extern-c-contents) [496 534])
            ("std" using (:type ("std" type
                 (:prototype t
                  :type "namespace")
                  nil nil)) nil [538 558])
            ("vcf" type
               (:members 
                  ( ("Variant" type
                       (:prototype t
                        :type "class")
                        (reparse-symbol namespacesubparts) [577 591])
                    ("VariantFieldType" type
                       (:members 
                          ( ("FIELD_FLOAT" variable
                               (:constant-flag t
                                :default-value (631 632)
                                :type "int")
                                (reparse-symbol enumsubparts) [617 632])
                            ("FIELD_INTEGER" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [657 694])
                            ("FIELD_BOOL" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [695 729])
                            ("FIELD_STRING" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [730 766])
                            ("FIELD_UNKNOWN" variable
                               (:constant-flag t
                                :type "int")
                                (reparse-symbol enumsubparts) [767 804]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [593 805])
                    ("VariantFieldNumber" type
                       (:members 
                          ( ("ALLELE_NUMBER" variable
                               (:constant-flag t
                                :default-value (849 851)
                                :type "int")
                                (reparse-symbol enumsubparts) [833 851])
                            ("GENOTYPE_NUMBER" variable
                               (:constant-flag t
                                :default-value (896 898)
                                :type "int")
                                (reparse-symbol enumsubparts) [878 898]))                          
                        :type "enum")
                        (reparse-symbol namespacesubparts) [807 925])
                    ("INDEX_NONE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [927 953])
                    ("NULL_ALLELE" variable
                       (:constant-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [954 981])
                    ("typeStrToFieldType" function
                       (:prototype-flag t
                        :arguments 
                          ( ("typeStr" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1019 1035]))                          
                        :type ("VariantFieldType" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [983 1036])
                    ("<<" function
                       (:prototype-flag t
                        :operator-flag t
                        :arguments 
                          ( ("out" variable
                               (:reference 1
                                :type ("ostream" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1057 1070])
                            ("type" variable (:type ("VariantFieldType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1071 1093]))                          
                        :type ("ostream" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [1037 1094])
                    ("Samples" type
                       (:typedef ("map" type
                             (:template-specifier 
                                ( ("string" type nil nil nil)
                                  ("map" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :superclasses "map"
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [1096 1155])
                    ("Cigar" type
                       (:typedef ("vector" type
                             (:template-specifier 
                                ( ("pair" type nil nil nil))                                
                              :type "class")
                              nil nil)
                        :superclasses "vector"
                        :type "typedef")
                        (reparse-symbol namespacesubparts) [1156 1197])
                    ("VariantCallFile" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [1224 1231])
                            ("file" variable
                               (:pointer 1
                                :type ("istream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1237 1251])
                            ("tabixFile" variable
                               (:pointer 1
                                :type ("Tabix" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1256 1273])
                            ("usingTabix" variable (:type "bool") (reparse-symbol classsubparts) [1279 1295])
                            ("header" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1301 1315])
                            ("line" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1320 1332])
                            ("fileformat" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1357 1375])
                            ("fileDate" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1380 1396])
                            ("source" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1401 1415])
                            ("reference" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1420 1437])
                            ("phasing" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [1442 1457])
                            ("infoTypes" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("VariantFieldType" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1462 1502])
                            ("infoCounts" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1507 1535])
                            ("formatTypes" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("VariantFieldType" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1540 1582])
                            ("formatCounts" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1587 1617])
                            ("sampleNames" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [1622 1649])
                            ("parseSamples" variable (:type "bool") (reparse-symbol classsubparts) [1654 1672])
                            ("_done" variable (:type "bool") (reparse-symbol classsubparts) [1677 1688])
                            ("updateSamples" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("newSampleNames" variable
                                       (:reference 1
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1713 1744]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1694 1745])
                            ("headerWithSampleNames" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("newSamples" variable
                                       (:reference 1
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [1779 1806]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [1750 1807])
                            ("addHeaderLine" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("line" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1862 1874]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1843 1875])
                            ("removeInfoHeaderLine" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("line" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1906 1918]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1880 1919])
                            ("removeGenoHeaderLine" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("line" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [1950 1962]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [1924 1963])
                            ("infoIds" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [1991 1996]))                                  
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [1968 1997])
                            ("formatIds" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [2027 2032]))                                  
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [2002 2033])
                            ("open" function
                               (:arguments 
                                  ( ("filename" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2049 2066]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2039 2318])
                            ("openFile" function
                               (:arguments 
                                  ( ("filename" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2338 2355]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2324 2505])
                            ("openTabix" function
                               (:arguments 
                                  ( ("filename" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2526 2543]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2511 2686])
                            ("open" function
                               (:arguments 
                                  ( ("stream" variable
                                       (:reference 1
                                        :type ("istream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2702 2718]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2692 2817])
                            ("open" function
                               (:arguments 
                                  ( ("stream" variable
                                       (:reference 1
                                        :type ("ifstream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2833 2850]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2823 2949])
                            ("openForOutput" function
                               (:arguments 
                                  ( ("headerStr" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [2974 2992]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [2955 3076])
                            ("VariantCallFile" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3094 3099]))                                  
                                :type ("VariantCallFile" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3078 3186])
                            ("VariantCallFile" function
                               (:destructor-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3208 3213]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [3191 3287])
                            ("is_open" function
                               (:arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3306 3311]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3293 3336])
                            ("eof" function
                               (:arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3351 3356]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3342 3380])
                            ("done" function
                               (:arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3396 3401]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3386 3419])
                            ("parseHeader" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("headerStr" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3442 3460]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3425 3461])
                            ("parseHeader" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [3484 3489]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3467 3490])
                            ("getNextVariant" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("var" variable
                                       (:reference 1
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3516 3529]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3496 3530])
                            ("setRegion" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("region" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3551 3565]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3536 3566])
                            ("setRegion" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("seq" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [3586 3597])
                                    ("start" variable (:type "long int") (reparse-symbol arg-sub-list) [3598 3613])
                                    ("end" variable (:type "long int") (reparse-symbol arg-sub-list) [3614 3628]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3571 3632])
                            ("private" label nil (reparse-symbol classsubparts) [3634 3642])
                            ("firstRecord" variable (:type "bool") (reparse-symbol classsubparts) [3647 3664])
                            ("justSetRegion" variable (:type "bool") (reparse-symbol classsubparts) [3669 3688])
                            ("usingFile" variable (:type "bool") (reparse-symbol classsubparts) [3693 3708])
                            ("_file" variable (:type ("ifstream" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3713 3728])
                            ("parsedHeader" variable (:type "bool") (reparse-symbol classsubparts) [3733 3751]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [1199 3755])
                    ("VariantAllele" type
                       (:members 
                          ( ("<<" function
                               (:prototype-flag t
                                :operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("out" variable
                                       (:reference 1
                                        :type ("ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3810 3823])
                                    ("var" variable
                                       (:reference 1
                                        :type ("VariantAllele" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3824 3843]))                                  
                                :type ("ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [3783 3844])
                            ("<" function
                               (:prototype-flag t
                                :operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("a" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("VariantAllele" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3871 3894])
                                    ("b" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("VariantAllele" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [3895 3918]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [3849 3919])
                            ("public" label nil (reparse-symbol classsubparts) [3920 3927])
                            ("ref" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3932 3943])
                            ("alt" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3948 3959])
                            ("repr" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [3964 3976])
                            ("position" variable (:type "long") (reparse-symbol classsubparts) [3981 3995])
                            ("VariantAllele" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("r" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4014 4023])
                                    ("a" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [4024 4033])
                                    ("p" variable (:type "long") (reparse-symbol arg-sub-list) [4034 4041]))                                  
                                :type ("VariantAllele" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4000 4190]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [3757 4193])
                    ("Variant" type
                       (:members 
                          ( ("<<" function
                               (:prototype-flag t
                                :operator-flag t
                                :typemodifiers ("friend")
                                :arguments 
                                  ( ("out" variable
                                       (:reference 1
                                        :type ("ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4243 4256])
                                    ("var" variable
                                       (:reference 1
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [4257 4270]))                                  
                                :type ("ostream" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4216 4271])
                            ("public" label nil (reparse-symbol classsubparts) [4277 4284])
                            ("sequenceName" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4290 4310])
                            ("position" variable (:type "long") (reparse-symbol classsubparts) [4315 4329])
                            ("zeroBasedPosition" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4357 4362]))                                  
                                :type "long")
                                (reparse-symbol classsubparts) [4334 4363])
                            ("id" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4368 4378])
                            ("ref" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [4383 4394])
                            ("alt" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4399 4418])
                            ("alleles" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [4489 4512])
                            ("vrepr" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4873 4878]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [4860 4879])
                            ("altSet" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [4969 4974]))                                  
                                :type ("set" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [4950 4975])
                            ("altAlleleIndexes" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("int" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [5027 5061])
                            ("parsedAlternates" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("includePreviousBaseForIndels" variable (:type "bool") (reparse-symbol arg-sub-list) [5150 5185])
                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5186 5192])
                                    ("useMNPs" variable (:type "bool") (reparse-symbol arg-sub-list) [5250 5264])
                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5265 5271])
                                    ("useEntropy" variable (:type "bool") (reparse-symbol arg-sub-list) [5329 5346])
                                    ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5347 5353])
                                    ("matchScore" variable (:type "float") (reparse-symbol arg-sub-list) [5411 5429])
                                    ("mismatchScore" variable (:type "float") (reparse-symbol arg-sub-list) [5494 5515])
                                    ("gapOpenPenalty" variable (:type "float") (reparse-symbol arg-sub-list) [5580 5602])
                                    ("gapExtendPenalty" variable (:type "float") (reparse-symbol arg-sub-list) [5667 5691])
                                    ("repeatGapExtendPenalty" variable (:type "float") (reparse-symbol arg-sub-list) [5756 5786])
                                    ("flankingRefLeft" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5850 5874])
                                    ("flankingRefRight" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [5936 5961]))                                  
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil)
                                          ("vector" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [5097 5966])
                            ("flatAlternates" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [6089 6094]))                                  
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil)
                                          ("vector" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [6038 6095])
                            ("extendedAlternates" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("newPosition" variable (:type "long int") (reparse-symbol arg-sub-list) [6140 6161])
                                    ("length" variable (:type "long int") (reparse-symbol arg-sub-list) [6162 6178]))                                  
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil)
                                          ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [6101 6179])
                            ("originalLine" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6185 6205])
                            ("filter" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [6445 6459])
                            ("quality" variable (:type "double") (reparse-symbol classsubparts) [6464 6479])
                            ("infoType" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6510 6522]))                                  
                                :type ("VariantFieldType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6484 6523])
                            ("info" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("vector" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6528 6562])
                            ("infoFlags" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("bool" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6630 6658])
                            ("formatType" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [6691 6703]))                                  
                                :type ("VariantFieldType" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6663 6704])
                            ("format" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6709 6731])
                            ("samples" variable (:type ("map" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil)
                                      ("map" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6736 6787])
                            ("sampleNames" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6855 6882])
                            ("outputSampleNames" variable (:type ("vector" type
                                 (:template-specifier 
                                    ( ("string" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [6887 6920])
                            ("vcf" variable
                               (:pointer 1
                                :type ("VariantCallFile" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [6925 6946])
                            ("removeAlt" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("altallele" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7121 7139]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7106 7140])
                            ("public" label nil (reparse-symbol classsubparts) [7142 7149])
                            ("Variant" function
                               (:constructor-flag t
                                :type ("Variant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7155 7168])
                            ("Variant" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("v" variable
                                       (:reference 1
                                        :type ("VariantCallFile" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7182 7201]))                                  
                                :type ("Variant" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7174 7307])
                            ("setVariantCallFile" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("v" variable
                                       (:reference 1
                                        :type ("VariantCallFile" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7337 7356]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7313 7357])
                            ("setVariantCallFile" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("v" variable
                                       (:pointer 1
                                        :type ("VariantCallFile" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7386 7405]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7362 7406])
                            ("parse" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("line" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7423 7436])
                                    ("parseSamples" variable (:type "bool") (reparse-symbol arg-sub-list) [7437 7456])
                                    ("" variable (:type ("true" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7457 7462]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7412 7463])
                            ("addFilter" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("tag" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7483 7495]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [7468 7496])
                            ("getValueBool" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7519 7531])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7532 7547])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [7548 7559])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7560 7571]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7501 7572])
                            ("getValueFloat" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7598 7610])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7611 7626])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [7627 7638])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7639 7650]))                                  
                                :type "double")
                                (reparse-symbol classsubparts) [7577 7651])
                            ("getValueString" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7678 7690])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7691 7706])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [7707 7718])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7719 7730]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7656 7731])
                            ("getSampleValueBool" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7760 7772])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7773 7788])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [7789 7800])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7801 7812]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7736 7813])
                            ("getSampleValueFloat" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7845 7857])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7858 7873])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [7874 7885])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7886 7897]))                                  
                                :type "double")
                                (reparse-symbol classsubparts) [7818 7898])
                            ("getSampleValueString" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7931 7943])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [7944 7959])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [7960 7971])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [7972 7983]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [7903 7984])
                            ("getInfoValueBool" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8011 8023])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [8024 8035])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8036 8047]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [7989 8048])
                            ("getInfoValueFloat" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8078 8090])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [8091 8102])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8103 8114]))                                  
                                :type "double")
                                (reparse-symbol classsubparts) [8053 8115])
                            ("getInfoValueString" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8146 8158])
                                    ("index" variable (:type "int") (reparse-symbol arg-sub-list) [8159 8170])
                                    ("" variable (:type ("INDEX_NONE" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [8171 8182]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8120 8183])
                            ("printAlt" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("out" variable
                                       (:reference 1
                                        :type ("ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8202 8215]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8188 8216])
                            ("printAlleles" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("out" variable
                                       (:reference 1
                                        :type ("ostream" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8305 8318]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8287 8319])
                            ("getAltAlleleIndex" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("allele" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8404 8419]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8382 8420])
                            ("updateAlleleIndexes" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8450 8455]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8425 8456])
                            ("addFormatField" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("key" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8481 8493]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8461 8494])
                            ("setOutputSampleNames" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("outputSamples" variable
                                       (:reference 1
                                        :type ("vector" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [8525 8555]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [8499 8556])
                            ("getGenotypeIndexesDiploid" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8612 8617]))                                  
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("pair" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol classsubparts) [8561 8618])
                            ("getNumSamples" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8641 8646]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8623 8647])
                            ("getNumValidGenotypes" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8677 8682]))                                  
                                :type "int")
                                (reparse-symbol classsubparts) [8652 8683])
                            ("getGenotype" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [8707 8722]))                                  
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [8688 8723])
                            ("isPhased" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [8742 8747]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [8728 8748])
                            ("private" label nil (reparse-symbol classsubparts) [8813 8821])
                            ("lastFormat" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [8827 8845]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [4195 8849])
                    ("RuleToken" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [8917 8924])
                            ("RuleTokenType" type
                               (:members 
                                  ( ("OPERAND" variable
                                       (:constant-flag t
                                        :default-value (8974 8975)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [8964 8975])
                                    ("NUMBER" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9001 9032])
                                    ("BOOLEAN_VARIABLE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9033 9074])
                                    ("NUMERIC_VARIABLE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9075 9116])
                                    ("STRING_VARIABLE" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9117 9157])
                                    ("AND_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9158 9195])
                                    ("OR_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9196 9232])
                                    ("ADD_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9233 9270])
                                    ("SUBTRACT_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9271 9313])
                                    ("MULTIPLY_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9314 9356])
                                    ("DIVIDE_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9357 9397])
                                    ("NOT_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9398 9435])
                                    ("EQUAL_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9436 9475])
                                    ("GREATER_THAN_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9476 9522])
                                    ("LESS_THAN_OPERATOR" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9523 9566])
                                    ("LEFT_PARENTHESIS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9567 9608])
                                    ("RIGHT_PARENTHESIS" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [9609 9651]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [8943 9652])
                            ("RuleToken" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("token" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [9687 9700])
                                    ("variables" variable
                                       (:reference 1
                                        :type ("map" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil)
                                                  ("VariantFieldType" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [9701 9742]))                                  
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9677 9743])
                            ("RuleToken" function
                               (:constructor-flag t
                                :arguments 
                                  ( ("" variable (:type "void") (reparse-symbol arg-sub-list) [9758 9763]))                                  
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [9748 9828])
                            ("type" variable (:type ("RuleTokenType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9854 9873])
                            ("value" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9878 9891])
                            ("number" variable (:type "double") (reparse-symbol classsubparts) [9897 9911])
                            ("str" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [9916 9927])
                            ("state" variable (:type "bool") (reparse-symbol classsubparts) [9932 9943])
                            ("isVariable" variable (:type "bool") (reparse-symbol classsubparts) [9949 9965])
                            ("apply" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("other" variable
                                       (:reference 1
                                        :type ("RuleToken" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [10066 10083]))                                  
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [10050 10084]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [8898 10088])
                    ("priority" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [10110 10133]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [10090 10979])
                    ("isRightAssociative" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11012 11035]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [10981 11148])
                    ("isLeftAssociative" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11180 11203]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11150 11246])
                    ("isLeftParenthesis" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11278 11301]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11248 11363])
                    ("isRightParenthesis" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11396 11419]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11365 11482])
                    ("isOperand" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11506 11529]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11484 11815])
                    ("isOperator" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [11840 11863]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [11817 12450])
                    ("isOperatorChar" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [12479 12493]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12452 12736])
                    ("isParanChar" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("c" variable
                               (:reference 1
                                :constant-flag t
                                :type "char")
                                (reparse-symbol arg-sub-list) [12762 12776]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12738 12815])
                    ("isNumeric" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12839 12862]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12817 12920])
                    ("isString" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [12943 12966]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [12922 13023])
                    ("isBoolean" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13047 13070]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [13025 13128])
                    ("isVariable" function
                       (:typemodifiers ("inline")
                        :arguments 
                          ( ("token" variable
                               (:reference 1
                                :constant-flag t
                                :type ("RuleToken" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13153 13176]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [13130 13248])
                    ("tokenizeFilterSpec" function
                       (:prototype-flag t
                        :arguments 
                          ( ("filterspec" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [13274 13293])
                            ("tokens" variable
                               (:reference 1
                                :type ("stack" type
                                     (:template-specifier 
                                        ( ("RuleToken" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13294 13319])
                            ("variables" variable
                               (:reference 1
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil)
                                          ("VariantFieldType" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [13320 13361]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [13250 13362])
                    ("VariantFilter" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [13388 13395])
                            ("VariantFilterType" type
                               (:members 
                                  ( ("SAMPLE" variable
                                       (:constant-flag t
                                        :default-value (13435 13436)
                                        :type "int")
                                        (reparse-symbol enumsubparts) [13426 13436])
                                    ("RECORD" variable
                                       (:constant-flag t
                                        :type "int")
                                        (reparse-symbol enumsubparts) [13467 13475]))                                  
                                :type "enum")
                                (reparse-symbol classsubparts) [13401 13476])
                            ("spec" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13482 13494])
                            ("tokens" variable (:type ("queue" type
                                 (:template-specifier 
                                    ( ("RuleToken" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [13499 13523])
                            ("rules" variable (:type ("queue" type
                                 (:template-specifier 
                                    ( ("RuleToken" type nil nil nil))                                    
                                  :type "class")
                                  nil nil)) (reparse-symbol classsubparts) [13554 13577])
                            ("type" variable (:type ("VariantFilterType" type (:type "class") nil nil)) (reparse-symbol classsubparts) [13610 13633])
                            ("VariantFilter" function
                               (:prototype-flag t
                                :constructor-flag t
                                :arguments 
                                  ( ("filterspec" variable (:type ("string" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13652 13670])
                                    ("filtertype" variable (:type ("VariantFilterType" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [13671 13700])
                                    ("variables" variable
                                       (:reference 1
                                        :type ("map" type
                                             (:template-specifier 
                                                ( ("string" type nil nil nil)
                                                  ("VariantFieldType" type nil nil nil))                                                
                                              :type "class")
                                              nil nil))
                                        (reparse-symbol arg-sub-list) [13701 13742]))                                  
                                :type ("VariantFilter" type (:type "class") nil nil))
                                (reparse-symbol classsubparts) [13638 13743])
                            ("passes" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("var" variable
                                       (:reference 1
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13760 13773])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13774 13789]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13748 13790])
                            ("passes" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("var" variable
                                       (:reference 1
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13824 13837])
                                    ("sample" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13838 13853])
                                    ("allele" variable
                                       (:reference 1
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13854 13869]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [13812 13870])
                            ("removeFilteredGenotypes" function
                               (:prototype-flag t
                                :arguments 
                                  ( ("var" variable
                                       (:reference 1
                                        :type ("Variant" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [13904 13917]))                                  
                                :type "void")
                                (reparse-symbol classsubparts) [13875 13918]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [13365 13922])
                    ("decomposePhasedGenotype" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14052 14075]))                          
                        :type ("vector" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14016 14076])
                    ("decomposeGenotype" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14109 14132]))                          
                        :type ("map" type
                             (:template-specifier 
                                ( ("int" type nil nil nil)
                                  ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14077 14133])
                    ("genotypeToString" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14159 14189]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14135 14190])
                    ("isHet" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14203 14233]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14192 14234])
                    ("isHom" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14247 14277]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14236 14278])
                    ("hasNonRef" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14295 14325]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14280 14326])
                    ("isHomRef" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14342 14372]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14328 14373])
                    ("isHomNonRef" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14392 14422]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14375 14423])
                    ("isNull" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14437 14467]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [14425 14468])
                    ("ploidy" function
                       (:prototype-flag t
                        :arguments 
                          ( ("genotype" variable
                               (:reference 1
                                :constant-flag t
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14481 14511]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [14470 14512])
                    ("unionInfoHeaderLines" function
                       (:prototype-flag t
                        :arguments 
                          ( ("s1" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14542 14553])
                            ("s2" variable
                               (:reference 1
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [14554 14565]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14514 14566])
                    ("glorder" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ploidy" variable (:type "int") (reparse-symbol arg-sub-list) [14626 14637])
                            ("alleles" variable (:type "int") (reparse-symbol arg-sub-list) [14638 14650]))                          
                        :type ("list" type
                             (:template-specifier 
                                ( ("list" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14601 14651])
                    ("_glorder" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ploidy" variable (:type "int") (reparse-symbol arg-sub-list) [14678 14689])
                            ("alleles" variable (:type "int") (reparse-symbol arg-sub-list) [14690 14702]))                          
                        :type ("list" type
                             (:template-specifier 
                                ( ("list" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14652 14703])
                    ("glsWithAlt" function
                       (:prototype-flag t
                        :arguments 
                          ( ("alt" variable (:type "int") (reparse-symbol arg-sub-list) [14725 14733])
                            ("ploidy" variable (:type "int") (reparse-symbol arg-sub-list) [14734 14745])
                            ("numalts" variable (:type "int") (reparse-symbol arg-sub-list) [14746 14758]))                          
                        :type ("list" type
                             (:template-specifier 
                                ( ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14704 14759])
                    ("glReorder" function
                       (:prototype-flag t
                        :arguments 
                          ( ("ploidy" variable (:type "int") (reparse-symbol arg-sub-list) [14784 14795])
                            ("numalts" variable (:type "int") (reparse-symbol arg-sub-list) [14796 14808])
                            ("alleleIndexMapping" variable
                               (:reference 1
                                :type ("map" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14809 14843])
                            ("altsToRemove" variable
                               (:reference 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14844 14870]))                          
                        :type ("map" type
                             (:template-specifier 
                                ( ("int" type nil nil nil)
                                  ("int" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14760 14871])
                    ("unique" function
                       (:prototype-flag t
                        :arguments 
                          ( ("strings" variable
                               (:reference 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14896 14920]))                          
                        :type ("vector" type
                             (:template-specifier 
                                ( ("string" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [14873 14921])
                    ("varCigar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("vav" variable
                               (:reference 1
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("VariantAllele" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [14939 14966])
                            ("xForMismatch" variable (:type "bool") (reparse-symbol arg-sub-list) [14967 14986])
                            ("" variable (:type ("false" type (:type "class") nil nil)) (reparse-symbol arg-sub-list) [14987 14993]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14923 14994])
                    ("mergeCigar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("c1" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15013 15030])
                            ("c2" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15031 15048]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [14995 15049])
                    ("splitCigar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigarStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15088 15111]))                          
                        :type ("vector" type
                             (:template-specifier 
                                ( ("pair" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [15050 15112])
                    ("splitCigarList" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigarStr" variable
                               (:reference 1
                                :constant-flag t
                                :type ("string" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [15153 15176]))                          
                        :type ("list" type
                             (:template-specifier 
                                ( ("pair" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [15113 15177])
                    ("cigarRefLen" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigar" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("pair" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15194 15232]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [15178 15233])
                    ("cigarRefLen" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigar" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("pair" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15250 15290]))                          
                        :type "int")
                        (reparse-symbol namespacesubparts) [15234 15291])
                    ("cleanCigar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigar" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("pair" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15330 15370]))                          
                        :type ("vector" type
                             (:template-specifier 
                                ( ("pair" type nil nil nil))                                
                              :type "class")
                              nil nil))
                        (reparse-symbol namespacesubparts) [15292 15371])
                    ("joinCigar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigar" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("pair" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15389 15429]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15372 15430])
                    ("joinCigar" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigar" variable
                               (:reference 1
                                :constant-flag t
                                :type ("vector" type
                                     (:template-specifier 
                                        ( ("pair" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15448 15486]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15431 15487])
                    ("joinCigarList" function
                       (:prototype-flag t
                        :arguments 
                          ( ("cigar" variable
                               (:reference 1
                                :constant-flag t
                                :type ("list" type
                                     (:template-specifier 
                                        ( ("pair" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15509 15547]))                          
                        :type ("string" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [15488 15548])
                    ("isEmptyCigarElement" function
                       (:prototype-flag t
                        :arguments 
                          ( ("elem" variable
                               (:reference 1
                                :constant-flag t
                                :type ("pair" type
                                     (:template-specifier 
                                        ( ("int" type nil nil nil)
                                          ("string" type nil nil nil))                                        
                                      :type "class")
                                      nil nil))
                                (reparse-symbol arg-sub-list) [15574 15604]))                          
                        :type "bool")
                        (reparse-symbol namespacesubparts) [15549 15605])
                    ("ChromNameCompare" type
                       (:members 
                          ( ("public" label nil (reparse-symbol classsubparts) [15691 15698])
                            ("()" function
                               (:operator-flag t
                                :arguments 
                                  ( ("a" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15719 15735])
                                    ("b" variable
                                       (:reference 1
                                        :constant-flag t
                                        :type ("string" type (:type "class") nil nil))
                                        (reparse-symbol arg-sub-list) [15736 15752]))                                  
                                :type "bool")
                                (reparse-symbol classsubparts) [15703 15815]))                          
                        :type "class")
                        (reparse-symbol namespacesubparts) [15666 15818]))                  
                :type "namespace")
                nil [560 15822]))          
    :file "Variant.h"
    :pointmax 15852
    :fsize 15851
    :lastmodtime '(21565 38089 2093 79000)
    :unmatched-syntax '((punctuation 14985 . 14986) (punctuation 8169 . 8170) (punctuation 8101 . 8102) (punctuation 8034 . 8035) (punctuation 7970 . 7971) (punctuation 7884 . 7885) (punctuation 7799 . 7800) (punctuation 7717 . 7718) (punctuation 7637 . 7638) (punctuation 7558 . 7559) (punctuation 7455 . 7456) (string 5962 . 5964) (punctuation 5960 . 5961) (string 5875 . 5877) (punctuation 5873 . 5874) (number 5787 . 5791) (punctuation 5785 . 5786) (number 5692 . 5697) (punctuation 5690 . 5691) (number 5603 . 5608) (punctuation 5601 . 5602) (number 5517 . 5521) (punctuation 5516 . 5517) (punctuation 5514 . 5515) (number 5430 . 5435) (punctuation 5428 . 5429) (punctuation 5345 . 5346) (punctuation 5263 . 5264) (punctuation 5184 . 5185) (number 3629 . 3630) (punctuation 3627 . 3628) (string 5962 . 5964) (punctuation 5960 . 5961) (string 5875 . 5877) (punctuation 5873 . 5874) (number 5787 . 5791) (punctuation 5785 . 5786) (number 5692 . 5697) (punctuation 5690 . 5691) (number 5603 . 5608) (punctuation 5601 . 5602) (number 5517 . 5521) (punctuation 5516 . 5517) (punctuation 5514 . 5515) (number 5430 . 5435) (punctuation 5428 . 5429) (punctuation 5345 . 5346) (punctuation 5263 . 5264) (punctuation 5184 . 5185) (number 3629 . 3630) (punctuation 3627 . 3628))
    :lexical-table 
        '(("__VARIANT_H")
          )

    )
   (semanticdb-table "split.h"
    :file "split.h"
    :fsize 1599
    :lastmodtime '(21565 38089 3093 31000)
    )
   (semanticdb-table "join.h"
    :file "join.h"
    :fsize 911
    :lastmodtime '(21565 38089 3093 31000)
    )
   (semanticdb-table "ssw_cpp.h"
    :file "ssw_cpp.h"
    :fsize 7899
    :lastmodtime '(21565 38089 4092 983000)
    )
   (semanticdb-table "convert.h"
    :file "convert.h"
    :fsize 470
    :lastmodtime '(21565 38089 2093 79000)
    )
   )
  :file "!home!dlee!Projects!freebayes!vcflib!src!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2"
  )
